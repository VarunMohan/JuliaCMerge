--------------------------------------------------------------------------------
I1 cache:         32768 B, 64 B, 8-way associative
D1 cache:         32768 B, 64 B, 8-way associative
LL cache:         20971520 B, 64 B, 20-way associative
Command:          ./test
Data file:        cachegrind.out.41765
Events recorded:  Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw Bc Bcm Bi Bim
Events shown:     Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw Bc Bcm Bi Bim
Event sort order: Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw Bc Bcm Bi Bim
Thresholds:       0.1 100 100 100 100 100 100 100 100 100 100 100 100
Include dirs:     
User annotated:   /afs/athena.mit.edu/user/v/m/vmohan/Classes/6.338/JuliaCMerge/src/merge/c/serial_merge.c
Auto-annotation:  off

--------------------------------------------------------------------------------
            Ir  I1mr  ILmr             Dr        D1mr       DLmr            Dw        D1mw       DLmw             Bc         Bcm          Bi   Bim 
--------------------------------------------------------------------------------
58,952,495,265 5,985 5,871 10,910,702,910 186,284,044 59,110,470 6,317,182,600 177,316,830 48,487,234 11,704,365,173 445,633,753 585,592,507 1,729  PROGRAM TOTALS

--------------------------------------------------------------------------------
           Ir I1mr ILmr            Dr       D1mr       DLmr            Dw       D1mw       DLmw            Bc         Bcm          Bi Bim  file:function
--------------------------------------------------------------------------------
9,910,778,996   26   26 1,593,441,946     49,956         39 1,404,698,287 18,550,421  3,130,472 1,799,600,799 132,042,882 545,229,698   1  /build/buildd/eglibc-2.19/stdlib/msort.c:msort_with_tmp.part.0
6,889,248,892   53   53 1,179,583,828 26,054,657  7,325,989   708,151,932 26,062,071  6,421,924 1,587,058,134  60,124,349           0   0  /afs/athena.mit.edu/user/v/m/vmohan/Classes/6.338/JuliaCMerge/src/merge/c/naive_parallel_merge.c:merge_sort_helper
6,818,741,365   24   24 1,137,389,274 25,758,903  4,212,156   687,704,092 25,608,216  4,221,304 1,582,339,382  59,553,824           0   0  /afs/athena.mit.edu/user/v/m/vmohan/Classes/6.338/JuliaCMerge/src/merge/c/naive_serial_merge.c:merge_sort_helper
6,790,132,866   15   15   908,024,919 17,340,269  2,928,777   459,124,254 18,868,333  4,657,678   902,777,707   1,201,572           0   0  /afs/athena.mit.edu/user/v/m/vmohan/Classes/6.338/JuliaCMerge/src/merge/c/serial_merge.c:merge_sort_helper
6,751,842,592    3    3   899,374,182 17,756,791  5,243,021   449,687,091 19,155,825  6,667,190   901,204,846     786,660           0   0  /afs/athena.mit.edu/user/v/m/vmohan/Classes/6.338/JuliaCMerge/src/merge/c/parallel_merge.c:serial_merge
4,851,065,733   10   10   721,105,107  4,741,658  4,553,223   652,473,411      1,688         15 1,373,578,518  80,381,396           0   0  /afs/athena.mit.edu/user/v/m/vmohan/Classes/6.338/JuliaCMerge/src/merge/c/sort.h:insertion_sort
4,848,706,437    0    0   718,745,811  4,736,986  4,718,607   652,473,411          0          0 1,373,578,518  80,317,970           0   0  /afs/athena.mit.edu/user/v/m/vmohan/Classes/6.338/JuliaCMerge/src/merge/c/sort.h:merge_sort_helper
3,357,339,174   53   53   550,910,267 12,734,506  5,723,444   278,498,107 10,597,646  2,916,873   765,057,566   1,976,878           0   0  /afs/athena.mit.edu/user/v/m/vmohan/Classes/6.338/JuliaCMerge/src/merge/c/optimized_parallel_merge.c:merge_sort_helper
3,303,796,733   26   26   514,325,808 12,624,003  4,178,748   263,454,440  9,497,466  1,475,058   759,692,269   1,206,433           0   0  /afs/athena.mit.edu/user/v/m/vmohan/Classes/6.338/JuliaCMerge/src/merge/c/optimized_serial_merge.c:merge_sort_helper
1,635,689,094    0    0 1,635,689,094 18,759,705  4,309,622             0          0          0             0           0           0   0  /afs/athena.mit.edu/user/v/m/vmohan/Classes/6.338/JuliaCMerge/src/merge/c/merge_test.c:uint32_t_compare
1,325,618,674   75   73   340,721,327 17,294,239  3,130,095   303,195,818 17,286,267  2,927,183   325,523,086  23,635,990           0   0  /build/buildd/eglibc-2.19/string/../sysdeps/x86_64/multiarch/../memcpy.S:__GI_memcpy
  653,507,674    6    6   201,329,072         12          8   100,664,536          0          0   100,664,536     811,830           0   0  /build/buildd/eglibc-2.19/stdlib/random_r.c:random_r
  481,829,910   51   51   161,276,790 28,006,596 12,765,839   158,131,056 28,071,429 12,906,876    49,683,480   1,983,843           0   0  /build/buildd/eglibc-2.19/string/../sysdeps/x86_64/multiarch/memcpy-sse2-unaligned.S:__memcpy_sse2_unaligned
  461,373,440    9    9   167,772,160          3          2    25,165,824          0          0   117,440,512          19           0   0  /build/buildd/eglibc-2.19/stdlib/random.c:random
  377,488,478   56   56           358        174        173    75,497,714  3,145,777  3,145,772    25,165,892          33          18  18  /afs/athena.mit.edu/user/v/m/vmohan/Classes/6.338/JuliaCMerge/src/merge/c/merge_test.c:main
  100,663,296    3    3    25,165,824          0          0    25,165,824          0          0             0           0           0   0  /build/buildd/eglibc-2.19/stdlib/rand.c:rand
   94,421,317    2    2    27,770,965     62,584        232             0          0          0    16,662,583         113           0   0  /build/buildd/eglibc-2.19/nptl/pthread_getspecific.c:pthread_getspecific
   90,244,388   42   40    36,299,082     62,549      1,063    25,313,791    111,976      2,013     5,554,312   1,291,511           0   0  /afs/athena.mit.edu/user/v/m/vmohan/Classes/6.338/JuliaCMerge/src/merge/c/parallel_merge.c:merge_sort_helper
   66,649,914    9    7    16,662,474        114          1    33,324,957    235,702      4,845     5,554,158           6           0   0  ???:__cilkrts_enter_frame

--------------------------------------------------------------------------------
-- User-annotated source: /afs/athena.mit.edu/user/v/m/vmohan/Classes/6.338/JuliaCMerge/src/merge/c/serial_merge.c
--------------------------------------------------------------------------------
           Ir I1mr ILmr          Dr       D1mr      DLmr          Dw       D1mw      DLmw          Bc     Bcm Bi Bim 

            .    .    .           .          .         .           .          .         .           .       .  .   .  #include "sort.h"
            .    .    .           .          .         .           .          .         .           .       .  .   .  
            .    .    .           .          .         .           .          .         .           .       .  .   .  //merge two sorted arrays A and B into array C
            .    .    .           .          .         .           .          .         .           .       .  .   .  static inline void merge(uint32_t* C, uint32_t* A, uint32_t* Aend, uint32_t* B, uint32_t* Bend) {
2,251,310,354    0    0           0          0         0 449,687,091 18,833,119 4,657,615 900,418,417 797,656  0   0    while (A < Aend && B < Bend) {
  899,374,182    3    3 899,374,182 17,325,527 2,928,759           0          0         0           0       0  0   0      if (*A < *B) {
  449,687,091    0    0           0          0         0           0          0         0           0       0  0   0        *C++ = *A++;
            .    .    .           .          .         .           .          .         .           .       .  .   .      } else {
3,147,809,637    0    0           0          0         0           0          0         0           0       0  0   0        *C++ = *B++;
            .    .    .           .          .         .           .          .         .           .       .  .   .      }
            .    .    .           .          .         .           .          .         .           .       .  .   .    }
    1,572,858    0    0           0          0         0           0          0         0     786,429       2  0   0    if (A < Aend) {
    2,114,492    0    0           0          0         0           0          0         0           0       0  0   0      memcpy(C, A, (Aend - A) * sizeof(*A));
            .    .    .           .          .         .           .          .         .           .       .  .   .    } else {
    2,088,470    0    0           0          0         0           0          0         0           0       0  0   0      memcpy(C, B, (Bend - B) * sizeof(*B));
            .    .    .           .          .         .           .          .         .           .       .  .   .    }
            .    .    .           .          .         .           .          .         .           .       .  .   .  }
            .    .    .           .          .         .           .          .         .           .       .  .   .  
   11,010,027    6    6           0          0         0   7,864,305     25,797        42           0       0  0   0  static void merge_sort_helper(uint32_t* arr, uint32_t n, int32_t* aux) {
    3,145,722    0    0           0          0         0           0          0         0   1,572,861 403,914  0   0    if (n <= SMALL_THRESHOLD) {
      786,432    0    0           0          0         0           0          0         0           0       0  0   0      insertion_sort(arr, arr + n);
            .    .    .           .          .         .           .          .         .           .       .  .   .      return;
            .    .    .           .          .         .           .          .         .           .       .  .   .    }
            .    .    .           .          .         .           .          .         .           .       .  .   .  
    5,505,003    6    6           0          0         0     786,429      9,417        21           0       0  0   0    merge_sort_helper(aux, n/2, arr);
    6,291,432    0    0           0          0         0     786,429          0         0           0       0  0   0    merge_sort_helper(aux + n/2, n - n/2, arr + n/2);
            .    .    .           .          .         .           .          .         .           .       .  .   .  
      786,429    0    0           0          0         0           0          0         0           0       0  0   0    merge(arr, aux, aux + n/2, aux + n/2, aux + n);
    8,650,737    0    0   8,650,737     14,742        18           0          0         0           0       0  0   0  }
            .    .    .           .          .         .           .          .         .           .       .  .   .  
           15    3    3           0          0         0           9          0         0           0       0  0   0  void serial_merge_sort(uint32_t* arr, uint32_t* arrend) {
            9    3    3           0          0         0           0          0         0           0       0  0   0    uint32_t n = arrend - arr;
            9    0    0           0          0         0           3          0         0           0       0  0   0    uint32_t *aux = (uint32_t*)malloc(sizeof(uint32_t) * (n)); //auxilliary memory for merge sort
            .    .    .           .          .         .           .          .         .           .       .  .   .  
           12    0    0           0          0         0           3          0         0           0       0  0   0    merge_sort_helper(arr, n, aux);
            .    .    .           .          .         .           .          .         .           .       .  .   .  
            6    0    0           0          0         0           0          0         0           0       0  0   0    free(aux);
            9    0    0           9          0         0           0          0         0           0       0  0   0  }
            .    .    .           .          .         .           .          .         .           .       .  .   .  

--------------------------------------------------------------------------------
Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw Bc Bcm Bi Bim 
--------------------------------------------------------------------------------
12    0    0  8    9    5  7   11   10  8   0  0   0  percentage of events annotated

